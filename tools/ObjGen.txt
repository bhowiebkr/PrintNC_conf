
DISPLAY
  description = Different user interface programs use different options, and not every option is supported by every user interface. The main two interfaces for LinuxCNC are AXIS and Touchy. There are several newer interfaces, like gmoccapy and gscreen. Axis is an interface for use with normal computer and monitor, Touchy is for use with touch screens. Gmoccapy can be used both ways and offers also many connections for hardware controls. Descriptions of the interfaces are in the Interfaces section of the User Manual.
  variables
    DISPLAY = axis - The name of the user interface to use. Valid options may include: axis, touchy, gmoccapy, gscreen, keystick, mini, tklinuxcnc, xemc,
    POSITION_OFFSET = RELATIVE - The coordinate system (RELATIVE or MACHINE) to show when the user interface starts. The RELATIVE coordinate system reflects the G92 and G5x coordinate offsets currently in effect.
    POSITION_FEEDBACK = ACTUAL - The coordinate value (COMMANDED or ACTUAL) to show when the user interface starts. The COMMANDED position is the ideal position requested by LinuxCNC. The ACTUAL position is the feedback position of the motors.
    MAX_FEED_OVERRIDE = 1.2 - The maximum feed override the user may select. 1.2 means 120% of the programmed feed rate.
    MIN_SPINDLE_OVERRIDE = 0.5 - The minimum spindle override the user may select. 0.5 means 50% of the programmed spindle speed. (This is useful as it’s dangerous to run a program with a too low spindle speed).
    MAX_SPINDLE_OVERRIDE  = 1.0 - The maximum spindle override the user may select. 1.0 means 100% of the programmed spindle speed.
    DEFAULT_SPINDLE_SPEED = 100 - The default spindle RPM when the spindle is started in manual mode. This is not the minimum speed. In AXIS this defaults to 1 RPM if this setting is not present.
    PROGRAM_PREFIX = ~/linuxcnc/nc_files - The default location for g-code files and the location for user-defined M-codes. This location is searched for the file name before the subroutine path and user M path if specified in the [RS274NGC] section.
    INTRO_GRAPHIC = emc2.gif - The image shown on the splash screen.
    INTRO_TIME = 5 - The maximum time to show the splash screen, in seconds.
    CYCLE_TIME = 0.05 - Cycle time in seconds that display will sleep between polls.
    DEFAULT_LINEAR_VELOCITY = .25 - The default velocity for linear jogs, in , machine units per second.
    MIN_VELOCITY = .01 - The approximate lowest value the jog slider.
    MAX_LINEAR_VELOCITY = 1.0 - The maximum velocity for linear jogs, in machine units per second.
    MIN_LINEAR_VELOCITY = .01 - The approximate lowest value the jog slider.
    DEFAULT_ANGULAR_VELOCITY = .25 - The default velocity for angular jogs, in machine units per second.
    MIN_ANGULAR_VELOCITY = .01 - The approximate lowest value the angular jog slider.
    MAX_ANGULAR_VELOCITY = 1.0 - The maximum velocity for angular jogs, in machine units per second.
    INCREMENTS = 1 mm, .5 in, … - Defines the increments available for incremental jogs. The INCREMENTS can be used to override the default. The values can be decimal numbers (e.g., 0.1000) or fractional numbers (e.g., 1/16), optionally followed by a unit (cm, mm, um, inch, in or mil). If a unit is not specified the machine unit is assumed. Metric and imperial distances may be mixed: INCREMENTS = 1 inch, 1 mil, 1 cm, 1 mm, 1 um is a valid entry.
    GRIDS = 10 mm, 1 in, … - Defines the preset values for grid lines. The value is interpreted the same way as INCREMENTS.
    OPEN_FILE = /full/path/to/file.ngc - The file to show in the preview plot when AXIS starts. Use a blank string "" and no file will be loaded at start up.
    EDITOR = gedit - The editor to use when selecting File > Edit to edit the G code from the AXIS menu. This must be configured for this menu item to work. Another valid entry is gnome-terminal -e vim.
    TOOL_EDITOR = tooledit - The editor to use when editing the tool table (for example by selecting "File > Edit tool table…" in Axis). Other valid entries are "gedit", "gnome-terminal -e vim", and "gvim".
    PYVCP = /filename.xml - The PyVCP panel description file. See the PyVCP section for more information.
    LATHE = 1 - This displays in lathe mode with a top view and with Radius and Diameter on the DRO.
    GEOMETRY = XYZABCUVW - Controls the preview and backplot of rotary motion. This item consists of a sequence of axis letters, optionally preceded by a "-" sign. Only axes defined in [TRAJ]AXES should be used. This sequence specifies the order in which the effect of each axis is applied, with a "-" inverting the sense of the rotation. The proper GEOMETRY string depends on the machine configuration and the kinematics used to control it. The example string GEOMETRY=XYZBCUVW is for a 5-axis machine where kinematics causes UVW to move in the coordinate system of the tool and XYZ to move in the coordinate system of the material. The order of the letters is important, because it expresses the order in which the different transformations are applied. For example rotating around C then B is different than rotating around B then C. Geometry has no effect without a rotary axis.
    ARCDIVISION = 64 - Set the quality of preview of arcs. Arcs are previewed by dividing them into a number of straight lines; a semicircle is divided into ARCDIVISION parts. Larger values give a more accurate preview, but take longer to load and result in a more sluggish display. Smaller values give a less accurate preview, but take less time to load and may result in a faster display. The default value of 64 means a circle of up to 3 inches will be displayed to within 1 mil (.03%).
    MDI_HISTORY_FILE = - The name of a local MDI history file. If this is not specified Axis will save the MDI history in .axis_mdi_history in the user’s home directory. This is useful if you have multiple configurations on one computer.
FILTER
  description = AXIS has the ability to send loaded files through a filter program. This filter can do any desired task: Something as simple as making sure the file ends with M2, or something as complicated as detecting whether the input is a depth image, and generating g-code to mill the shape it defines. The [FILTER] section of the ini file controls how filters work. First, for each type of file, write a PROGRAM_EXTENSION line. Then, specify the program to execute for each type of file. This program is given the name of the input file as its first argument, and must write RS274NGC code to standard output. This output is what will be displayed in the text area, previewed in the display area, and executed by LinuxCNC when Run.
  variables 
    PROGRAM_EXTENSION = .extension Description
    PROGRAM_EXTENSION = .NGC XYZ Post Processor
    PROGRAM_EXTENSION = .png,.gif,.jpg Greyscale Depth Image
    PROGRAM_EXTENSION = .py Python Script
    FILTER_PROGRESS=%d
RS274NGC
  description = 
  variables
    PARAMETER_FILE = myfile.var - The file located in the same directory as the ini file which contains the parameters used by the interpreter (saved between runs).
    ORIENT_OFFSET = 0 - A float value added to the R word parameter of an M19 Orient Spindle operation. Used to define an arbitrary zero position regardless of encoder mount orientation.
    RS274NGC_STARTUP_CODE = G17 G20 G40 G49 G64 P0.001 G80 G90 G92 G94 G97 G98 - A string of NC codes that the interpreter is initialized with. This is not a substitute for specifying modal g-codes at the top of each ngc file, because the modal codes of machines differ, and may be changed by g-code interpreted earlier in the session.
    SUBROUTINE_PATH = ncsubroutines:/tmp/testsubs:lathesubs:millsubs - Specifies a colon (:) separated list of up to 10 directories to be searched when single-file subroutines are specified in gcode. These directories are searched after searching [DISPLAY]PROGRAM_PREFIX (if it is specified) and before searching [WIZARD]WIZARD_ROOT (if specified). The paths are searched in the order that they are listed. The first matching subroutine file found in the search is used. Directories are specified relative to the current directory for the ini file or as absolute paths. The list must contain no intervening whitespace.
    USER_M_PATH = myfuncs:/tmp/mcodes:experimentalmcodes - Specifies a list of colon (:) separated directories for user defined functions. Directories are specified relative to the current directory for the ini file or as absolute paths. The list must contain no intervening whitespace.
    [DISPLAY]PROGRAM_PREFIX (if specified) If [DISPLAY]PROGRAM_PREFIX is not specified, search the default location: nc_files.      Then search each directory in the list [RS274NGC]USER_M_PATH The first executable M1xx found in the search is used for each M1xx.
    USER_DEFINED_FUNCTION_MAX_DIRS=5. The maximum number of directories defined at compile time.
EMCMOT
  description = This section is a custom section and is not used by LinuxCNC directly. Most configurations use values from this section to load the motion controller. For more information on the motion controller see the Motion Section.
  variables 
    EMCMOT = motmod - the motion controller name is typically used here.
    BASE_PERIOD = 50000 - the Base task period in nanoseconds.
    SERVO_PERIOD = 1000000 - This is the "Servo" task period in nanoseconds.
    TRAJ_PERIOD = 100000 - This is the Trajectory Planner task period in nanoseconds.
TASK
  description = 
  variables
    TASK = milltask - Specifies the name of the task executable. The task executable does various things, such as communicate with the UIs over NML, communicate with the realtime motion planner over non-HAL shared memory, and interpret gcode. Currently there is only one task executable that makes sense for 99.9% of users, milltask.
    CYCLE_TIME = 0.010 - The period, in seconds, at which TASK will run. This parameter affects the polling interval when waiting for motion to complete, when executing a pause instruction, and when accepting a command from a user interface. There is usually no need to change this number.
HAL
  description = 
  variables
    TWOPASS=ON - Use two pass processing for loading HAL comps. With TWOPASS processing, all [HAL]HALFILES are first read and multiple appearances of loadrt directives for each moduleb are accumulated. No hal commands are executed in this initial pass.
    HALFILE = example.hal - Execute the file example.hal at start up. If HALFILE is specified multiple times, the files are executed in the order they appear in the ini file. Almost all configurations will have at least one HALFILE, and stepper systems typically have two such files, one which specifies the generic stepper configuration (core_stepper.hal) and one which specifies the machine pin out (xxx_pinout.hal)
    HALCMD = command - Execute command as a single HAL command. If HALCMD is specified multiple times, the commands are executed in the order they appear in the ini file. HALCMD lines are executed after all HALFILE lines.
    SHUTDOWN = shutdown.hal - Execute the file shutdown.hal when LinuxCNC is exiting. Depending on the hardware drivers used, this may make it possible to set outputs to defined values when LinuxCNC is exited normally. However, because there is no guarantee this file will be executed (for instance, in the case of a computer crash) it is not a replacement for a proper physical e-stop chain or other protections against software failure.
    POSTGUI_HALFILE = example2.hal - (Only with the TOUCHY and AXIS GUI) Execute example2.hal after the GUI has created its HAL pins. See section pyVCP with Axis Section for more information.
    HALUI = halui - adds the HAL user interface pins. For more information see the HAL User Interface chapter.
HALUI
  description = 
  variables
    MDI_COMMAND = G53 G0 X0 Y0 Z0 - An MDI command can be executed by using halui.mdi-command-00. Increment the number for each command listed in the [HALUI] section.
TRAJ
  description = The [TRAJ] section contains general parameters for the trajectory planning module in motion.
  variables
    COORDINATES = X Y Z - The names of the axes being controlled. Only X, Y, Z, A, B, C, U, V, W are valid. Only axes named in COORDINATES are accepted in g-code. This has no effect on the mapping from G-code axis names (X- Y- Z-) to joint numbers—for trivial kinematics, X is always joint 0, A is always joint 3, and U is always joint 6, and so on. It is permitted to write an axis name twice (e.g., X Y Y Z for a gantry machine) but this has no effect.
    AXES = 3 - One more than the number of the highest joint number in the system. For an XYZ machine, the joints are numbered 0, 1 and 2; in this case AXES should be 3. For an XYUV machine using trivial kinematics, the V joint is numbered 7 and therefore AXES should be 8. For a machine with nontrivial kinematics (e.g., scarakins) this will generally be the number of controlled joints.
    JOINTS = 3 - (This config variable is used by the Axis GUI only, not by the trajectory planner in the motion controller.) Specifies the number of joints (motors) in the system. For example, an XYZ machine with a single motor for each axis has 3 joints. A gantry machine with one motor on each of two of the axes, and two motors on the third axis, has 4 joints.
    HOME = 0 0 0 - Coordinates of the homed position of each axis. Again for a fourth axis you will need 0 0 0 0. This value is only used for machines with nontrivial kinematics. On machines with trivial kinematics this value is ignored.
    LINEAR_UNITS = <units> - Specifies the machine units for linear axes. Possible choices are (in, inch, imperial, metric, mm). This does not affect the linear units in NC code (the G20 and G21 words do this).
    ANGULAR_UNITS = <units> - Specifies the machine units for rotational axes. Possible choices are deg, degree (360 per circle), rad, radian (2pi per circle), grad, or gon (400 per circle). This does not affect the angular units of NC code. In RS274NGC, A-, B- and C- words are always expressed in degrees.
    DEFAULT_VELOCITY = 0.0167 - The initial rate for jogs of linear axes, in machine units per second. The value shown in Axis equals machine units per minute.
    DEFAULT_ACCELERATION = 2.0 - In machines with nontrivial kinematics, the acceleration used for "teleop" (Cartesian space) jogs, in machine units per second per second.
    MAX_VELOCITY = 5.0 - The maximum velocity for any axis or coordinated move, in machine units per second. The value shown equals 300 units per minute.
    MAX_ACCELERATION = 20.0 - The maximum acceleration for any axis or coordinated axis move, in machine units per second per second.
    POSITION_FILE = position.txt - If set to a non-empty value, the joint positions are stored between runs in this file. This allows the machine to start with the same coordinates it had on shutdown. This assumes there was no movement of the machine while powered off. If unset, joint positions are not stored and will begin at 0 each time LinuxCNC is started. This can help on smaller machines without home switches.
    NO_FORCE_HOMING = 1 - The default behavior is for LinuxCNC to force the user to home the machine before any MDI command or a program is run. Normally, only jogging is allowed before homing. Setting NO_FORCE_HOMING = 1 allows the user to make MDI moves and run programs without homing the machine first. Interfaces without homing ability will need to have this option set to 1.
AXIS
  description = The [AXIS_0], [AXIS_1], etc. sections contains general parameters for the individual components in the axis control module. The axis section names begin numbering at 0, and run through the number of axes specified in the [TRAJ] AXES entry minus 1. Typically (but not always): IS_0 = X AXIS_1 = Y AXIS_2 = Z AXIS_3 = A AXIS_4 = B AXIS_5 = C AXIS_6 = U AXIS_7 = V AXIS_8 = W
  variables
    TYPE = LINEAR - The type of axes, either LINEAR or ANGULAR.
    WRAPPED_ROTARY = 1 - When this is set to 1 for an ANGULAR axis the axis will move 0-359.999 degrees. Positive Numbers will move the axis in a positive direction and negative numbers will move the axis in the negative direction.
    LOCKING_INDEXER = 1 - When this is set to 1 a G0 move for this axis will initiate an unlock with axis.N.unlock pin then wait for the axis.N.is-unlocked pin then move the axis at the rapid rate for that axis. After the move the axis.N.unlock will be false and motion will wait for axis.N.is-unlocked to go false. Moving with other axes is not allowed when moving a locked rotary axis.
    UNITS = INCH - If specified, this setting overrides the related [TRAJ] UNITS setting. (e.g., [TRAJ]LINEAR_UNITS if the TYPE of this axis is LINEAR, [TRAJ]ANGULAR_UNITS if the TYPE of this axis is ANGULAR)
    MAX_VELOCITY = 1.2 - Maximum velocity for this axis in machine units per second.
    MAX_ACCELERATION = 20.0 - Maximum acceleration for this axis in machine units per second squared.
    BACKLASH = 0.0000 - Backlash in machine units. Backlash compensation value can be used to make up for small deficiencies in the hardware used to drive an axis. If backlash is added to an axis and you are using steppers the STEPGEN_MAXACCEL must be increased to 1.5 to 2 times the MAX_ACCELERATION for the axis.
    COMP_FILE = file.extension - A file holding compensation structure for the axis. The file could be named xscrew.comp, for example, for the X axis. File names are case sensitive and can contain letters and/or numbers. The values are triplets per line separated by a space. The first value is nominal (where it should be). The second and third values depend on the setting of COMP_FILE_TYPE. Currently the limit inside LinuxCNC is for 256 triplets per axis. If COMP_FILE is specified, BACKLASH is ignored. Compensation file values are in machine units.
    COMP_FILE_TYPE = 0 or 1 - If 0: The second and third values specify the forward position (where the axis is while traveling forward) and the reverse position (where the axis is while traveling reverse), positions which correspond to the nominal position.' If 1: The second and third values specify the forward trim (how far from nominal while traveling forward) and the reverse trim (how far from nominal while traveling in reverse), positions which correspond to the nominal position. Example triplet with COMP_FILE_TYPE = 0: 1.00 1.01 0.99 + Example triplet with COMP_FILE_TYPE = 1: 1.00 0.01 -0.01
    MIN_LIMIT = -1000 - The minimum limit (soft limit) for axis motion, in machine units. When this limit is exceeded, the controller aborts axis motion.
    MAX_LIMIT = 1000 - The maximum limit (soft limit) for axis motion, in machine units. When this limit is exceeded, the controller aborts axis motion.
    MIN_FERROR = 0.010 - This is the value in machine units by which the axis is permitted to deviate from commanded position at very low speeds. If MIN_FERROR is smaller than FERROR, the two produce a ramp of error trip points. You could think of this as a graph where one dimension is speed and the other is permitted following error. As speed increases the amount of following error also increases toward the FERROR value.
    FERROR = 1.0 - FERROR is the maximum allowable following error, in machine units. If the difference between commanded and sensed position exceeds this amount, the controller disables servo calculations, sets all the outputs to 0.0, and disables the amplifiers. If MIN_FERROR is present in the .ini file, velocity-proportional following errors are used. Here, the maximum allowable following error is proportional to the speed, with FERROR applying to the rapid rate set by [TRAJ]MAX_VELOCITY, and proportionally smaller following errors for slower speeds. The maximum allowable following error will always be greater than MIN_FERROR. This prevents small following errors for stationary axes from inadvertently aborting motion. Small following errors will always be present due to vibration, etc. The following polarity values determine how inputs are interpreted and how outputs are applied. They can usually be set via trial-and-error since there are only two possibilities. The LinuxCNC Servo Axis Calibration utility program (in the AXIS interface menu Machine/Calibration and in TkLinuxCNC it is under Setting/Calibration) can be used to set these and more interactively and verify their results so that the proper values can be put in the INI file with a minimum of trouble.


EMCIO
  description = 
  variables
    EMCIO = io - Name of IO controller program
    CYCLE_TIME = 0.100 - The period, in seconds, at which EMCIO will run. Making it 0.0 or a negative number will tell EMCIO not to sleep at all. There is usually no need to change this number.
    TOOL_TABLE = tool.tbl - The file which contains tool information, described in the User Manual.
    TOOL_CHANGE_POSITION = 0 0 2 - Specifies the XYZ location to move to when performing a tool change if three digits are used. Specifies the XYZABC location when 6 digits are used. Specifies the XYZABCUVW location when 9 digits are used. Tool Changes can be combined. For example if you combine the quill up with change position you can move the Z first then the X and Y.
    TOOL_CHANGE_WITH_SPINDLE_ON = 1 - The spindle will be left on during the tool change when the value is 1. Useful for lathes or machines where the material is in the spindle, not the tool.
    TOOL_CHANGE_QUILL_UP = 1 - The Z axis will be moved to machine zero prior to the tool change when the value is 1. This is the same as issuing a G0 G53 Z0.
    TOOL_CHANGE_AT_G30 = 1 - The machine is moved to reference point defined by parameters 5181-5186 for G30 if the value is 1. For more information see G-Code Parameters and G-Code G30-G30.1.
    RANDOM_TOOLCHANGER = 1 - This is for machines that cannot place the tool back into the pocket it came from. For example, machines that exchange the tool in the active pocket with the tool in the spindle.
